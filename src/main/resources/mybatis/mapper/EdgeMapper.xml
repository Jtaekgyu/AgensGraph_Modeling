<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.graph.mapper.EdgeMapper">

    <insert id="saveEdge" parameterType="com.example.graph.domain.edge.Reviewed" useGeneratedKeys="true">
        CREATE
        (R:Review { rating: #{review.rating}, review: #{review.review}, reviewer: #{review.reviewer} } ),
        (M:movie{ name: #{movie.name}, rating:#{movie.rating} } ),
        (R)-[E:reviewed]->(M);
    </insert>

    <insert id="saveMovieToMovie" parameterType="com.example.graph.domain.edge.EdgeMovieToMovie" useGeneratedKeys="true">
        CREATE
        (M1:Movie { name: #{movie1.name}, rating: #{movie1.rating} } ),
        (M2:Movie { name: #{movie2.name}, rating: #{movie2.rating} } ),
        (M1)-[E:EdgeMovieToMovie]->(M2);
    </insert>
    
    <insert id="saveEdgeReviewd" parameterType="com.example.graph.domain.edge.EdgeReviewed" useGeneratedKeys="true">
        CREATE
        (R:Review { reviewer: #{review.reviewer}, review: #{review.review}, rating:#{review.rating} } ),
        (M:Movie { name: #{movie.name}, rating: #{movie.rating} } ),
        (R)-[E:${edgeName}]->(M);
    </insert>
    
    <insert id="saveEdgePersonToMovie" parameterType="com.example.graph.domain.edge.EdgePersonToMovie" useGeneratedKeys="true">
        CREATE
        (P:Person { name:#{person.name}, born:#{person.born}, job:#{person.job} } ),
        (M:Movie { name:#{movie.name}, rating:#{movie.rating} } ),
        (P)-[E:${edgeName}]->(M);
    </insert>
    
    <insert id="saveEdgePersonActedInMovie" parameterType="com.example.graph.domain.edge.EdgeGenPerActMov" useGeneratedKeys="true">
        CREATE
        (P:Person { name:#{person.name}, born:#{person.born}, job:#{person.job} } ),
        (M:Movie { name:#{movie.name}, rating:#{movie.rating} } ),
        (P)-[E:Acted_in { role: #{edge.role} } ]->(M);
    </insert>
    
    <select id="findAllVEV" parameterType="com.example.graph.dto.request.VEVReqDto" resultType="com.example.graph.dto.response.VEVResDto">
        MATCH ( V1:${startV})-[E:${edge}]->(V2:${endV}) RETURN V1,E,V2;
    </select>

</mapper>